function [] = plot_fit()

[count_array,evis_array,mean_array,min_array,max_array,weights] = GetValues()

% Line Fit Results
p1 = -0.0002336;
p2 = 1.489;


%% Plot Only Fit Region
% Create figure
figure1 = figure;
% Create axes
axes1 = axes('Parent',figure1,'PlotBoxAspectRatio',[1 1 1],'FontSize',24,'FontWeight','bold');
ylim([1.0 2.0]);
hold on;

% % Error as HWHM
% errorbar(evis_array,mean_array,(mean_array-min_array),(max_array-mean_array),...
%     'MarkerSize',10,'MarkerFaceColor',[0 0 0],...
%     'MarkerEdgeColor',[0 0 0],...
%     'Marker','o',...
%     'LineStyle','none',...
%     'LineWidth',1,...
%     'DisplayName','MC Points with HWHM',...
%     'Parent',axes1,...
%     'Color',[0 0 0]);

% Error as HWHM
errorbar(evis_array,mean_array,mean_array./sqrt(count_array),...
    'MarkerSize',10,'MarkerFaceColor',[0 0 0],...
    'MarkerEdgeColor',[0 0 0],...
    'Marker','o',...
    'LineStyle','none',...
    'LineWidth',1,...
    'DisplayName','MC Points with Statistical Errors',...
    'Parent',axes1,...
    'Color',[0 0 0]);

% Plot Low Energy Fit
[x,y] = GetFit_XY(p1,p2,300);
plot(x,y,'LineWidth',2,'DisplayName','Weighted Fit Result');

% Plot Jaewon's Constant
x_j = linspace(0,300,1000);
y_j = linspace(1.326,1.326,1000);
plot(x_j,y_j,'--r','LineWidth',2,'DisplayName','High Energy kT = 1.326')

% Create xlabel
xlabel('Visible Energy [MeV]','FontSize',24,'FontWeight','bold');
% Create ylabel
ylabel('E_{True}/E_{Visible}','FontSize',24,'FontWeight','bold');
% Create legend
legend(axes1,'show');

hold off;

%% Plot All Region
% Create figure
figure2 = figure;
% Create axes
axes2 = axes('Parent',figure2,'PlotBoxAspectRatio',[1 1 1],'FontSize',24,'FontWeight','bold');
ylim([1.0 2.0]);
hold on;

% % Plot Low Energy Points
% errorbar(evis_array,mean_array,(mean_array-min_array),(max_array-mean_array),...
%     'MarkerSize',10,'MarkerFaceColor',[0 0 0],...
%     'MarkerEdgeColor',[0 0 0],...
%     'Marker','o',...
%     'LineStyle','none',...
%     'LineWidth',1,...
%     'DisplayName','MC Points with HWHM',...
%     'Parent',axes2,...
%     'Color',[0 0 0]);

errorbar(evis_array,mean_array,mean_array./sqrt(count_array),...
    'MarkerSize',10,'MarkerFaceColor',[0 0 0],...
    'MarkerEdgeColor',[0 0 0],...
    'Marker','o',...
    'LineStyle','none',...
    'LineWidth',1,...
    'DisplayName','MC Points with Statistical Error',...
    'Parent',axes2,...
    'Color',[0 0 0]);

% Plot Low Energy Fit
x_max = GetFit_MaxX(p1,p2)
[x,y] = GetFit_XY(p1,p2,x_max);
plot(x,y,'LineWidth',2,...,
    'DisplayName','Weighted Fit Result',...
    'Parent',axes2);

% Plot High Energy Points
x_high = linspace(x_max,1500,10);
y_high = linspace(1.326,1.326,10);
plot(x_high,y_high,...
    'MarkerSize',10,'MarkerFaceColor','r',...
    'MarkerEdgeColor','r',...
    'Marker','o',...
    'LineStyle','none',...
    'LineWidth',1,...
    'Parent',axes2,...
    'DisplayName','High Energy Points (kT = 1.326)',...
    'Color','r');

% Create xlabel
xlabel('Visible Energy [MeV]','FontSize',24,'FontWeight','bold');
% Create ylabel
ylabel('E_{True}/E_{Visible}','FontSize',24,'FontWeight','bold');
% Create legend
legend(axes2,'show');

end

function [x_max] = GetFit_MaxX(p1,p2)
y = 1.326; % Jaweon's Constant - We know this value works for High Energy
x_max = (y-p2)/p1;
end

function [x,y] = GetFit_XY(p1,p2,x_max)
x = linspace(0,x_max,1000);
y = p1*x+p2;
end

function [avg] = getAverage(h)
kT = h(:,1);
nevents = h(:,2);

total = kT .* nevents;
avg = sum(total) / sum(nevents);
end
