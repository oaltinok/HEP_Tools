================================================================================
v2_19
CCProtonPi0 Updates:
	Signal Definition Changed
		Signal Definition explicitly checks for Fiducial Volume
			Actually True Vertex Fiducial Volume is required for ALL Events,
			This addition just for a better Signal Definition
	Background Study Improved: Two Different Background Sets
		Background Type
			AntiNeutrino, QELike, SinglePion, DoublePion, MultiPion
		Background with Pi0
			NoPi0, SinglePi0, MultiPi0
	Do NOT Reconstruct MC Event
		If TRUE vertex is NOT Fiducial
		If TRUE Interaction is NOT ChargedCurrent 
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	makeClass Folder Structure Improved for different TBranches
		CCProtonPi0 , Truth, Other
		Truth Branch is used to Analyze All Truth Events
			Get Total Number of Signal Events    
================================================================================
v2_18
CCProtonPi0 Updates:
	Changed Global Variables to mutable Member Variables
	Removed Unused/Old Classes
	Signal Definition Changed
		No Longer Requiring 2x Gamma Out of Nucleus
		Current Definition:
			CC Neutrino Interaction
			Single Pi0 out of nucleus
			No Mesons out of nucleus
	VertexBlob() Modified
		FilamentVertex Calculation removed -- Trung's suggestion
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Interaction Class Modified to use MnvH1D 
	Plotter Class Improved
		Implementation for Plotting Macros in another file
	CCProtonPi0_Plotter_Macros.cpp
================================================================================
v2_17
CCProtonPi0 Updates:
	No Major Changes
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Integrated <PlotUtils> and <UnfoldUtils> to the package
	Refactored Particle Classes
		Improved performance by removing all calculations
		Minerva style histograms
	Refactored Plotter to use <MnvPlotter>
	Reorganized Input/Output Mechanism
================================================================================
v2_16
CCProtonPi0 Updates:
	Refactored reconstructEvent() Function
		Removed Unused Cuts
		Improved Modular Design
	Reorganized Tools and Services
		Removed Unused Tools
		Initialize all tools under one try-catch 
	Saving Leading Proton Kinematics in addition to all_protons
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	No Major Changes
================================================================================
v2_15
CCProtonPi0 Updates:
	No Major  Changes
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Output Folder for ROOT files is now under /minerva/data
	New Mode: Reduce NTuples 
		Create a single ROOT file only with the events passing event selections
		Mode implemented as a Public Function for Analyzer Class
			All Classes initialized differently if the Mode is Reduce
				Other classes do not need to create their output files
		During Reduce, Filling Cut Statistics and Cut Histograms
	Analyze Mode Modified to use the Reduced NTuples

================================================================================
v2_14b 

Commit before major NTupleAnalysis Update
	No Major Updates

================================================================================
v2_14a 

Commit after fixing compilation Errors
	No Major Updates
	Removed: static const double SENTINEL from header file
===============================================================================
v2_14 

Commit after fixing compilation Errors
	No Major Updates
===============================================================================
v2_13 

CCProtonPi0 Updates:
	General:
		Ran successfully with Eroica
		Refactored Event Kinematics
			Modular Design
			Neutrino Energy 
				1 Track Events uses Equation from DocDB: 9749-v2
				2 Track Events uses Final State Particles
				Muon Energy + Hadron Visible Energy
			Q2 and W2
				Calculated for two different Neutrino Energy
	Proton Reconstruction:
		Something wrong with it. 
			dEdXTool returns wrong 4-Momentum
			Committing to compare changes
		
	Pi0 Reconstruction:

-------------------------------------------------------------------------------
NTupleAnalysis Updates:

===============================================================================
v2_12 - Version for Rochester Meeting June 2015

CCProtonPi0 Updates:
	General:
		Removed nProngs Cut
	Proton Reconstruction:
		Proton Reconstruction runs only if nPrimaryProngs > 1
	Pi0 Reconstruction:
		Modified AreBlobsGood() Function
			Required for Good Blob Momentums
		Changed VtxBlob() to be void function
			It was returning TRUE always 
		

--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Analysis Cuts are changed 
		No Longer using nProngs Cut and Separating Two Topologies after 
			Pi0 inv Mass Cut
	CutList Improved for New Analysis Cuts
	Script for Data Job Submission Added

================================================================================
v2_11

CCProtonPi0 Updates:
	Removed EMPID Tool
	Modified for MichelTool Cleaning Cut Implementation
	Reorganized NTuple Variables
	
	Refactored Pi0 Reconstruction
		Improved Function Design
		Using Global Variables to store Gamma1 and Gamma2
			Will Change Global Variable Design in later versions
		
	Pi0BlobTool
		New Class for checking quality of found Blobs
		Initial Commit of the Class - Not using in this version

--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	New Class: Pi0Blob
		Class for studying Pi0Blob Properties
================================================================================
v2_10

CCProtonPi0 Updates:
    TagTruth():
        SetSignalKinematics() Improved, 
            Pi0 Daughters: Gamma1 and Gamma 2 are saved also
            True Particle Kinematics are saved in format: P4 = (px, py, pz, E)
            Removed old format 
    Proton Reconstruction:
        Calculate Proton Track Length using end & start points
    
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Fixed Class Name Conflict with the Framework:
        Some Classes in NTupleAnalysis Package have same name 
            with a Class in Framework
        All Class Names are Changed as following:
            Class -----> CCProtonPi0_Class

================================================================================
v2_09

CCProtonPi0 Updates:
    Improved Job Submission Script Located: /CCProtonPi0/NTupleAnalysis/Input/
        Job Submission  for Odd and Even Run Numbers 
        
    Implemented selection mechanism for Found Michel Prongs
        Save Events with Short time difference AND High michel prong energy
        
    Updated PreFilter() Function Parameters
        Unused Energy in Tracker + ECAL + HCAL = [80,2000] --- > [50,2000]

--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Added Log File Functionality
        Instead of cout, using Log File for debugging purposes
    Fixed Timing of the Package
        Was using clock(), replaced it with time()
    New Class: MichelTool - For Michel Studies
        Collected all Histograms and Counters under MichelTool Class
        Analyzer fills MichelTool Histograms
================================================================================
v2_08

CCProtonPi0 Updates:
    Michel Tool
        New Parameters for Detected Michel Prongs
    Removed readme file from doc/
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Wextra Added to the MakeFile
        Fixed all warnings due to Wextra
    New Class: Interaction
        Removed Interaction specific variables and functions from Analyzer 
            and created Interaction Class
    Major Revision of Analyzer Class
        Combined All implementations files under single file Analyzer.cpp
        Removed Unused functions and variables
    Revised Plotter Class
        Modified Function Calls
        Removed Unused parameters
================================================================================
v2_07

General Updates:
    No Updates on CCProtonPi0 Package
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Improved Notifications during Initialization

    Added Base Class for the Package: NTupleAnalysis
        NTupleAnalysis Class Includes Member Variables common for 
            all other classes
    
    Removed all Default Constructors 
        Previously,  Default ctor was giving an error on runtime, 
            now it will give an error during compile
        Object Initiation only possible via overloaded constructors
        Compiler will give an Error, if the Object is initiated with 
            Default Constructors
        
    New Class: BackgroundTool
        Responsible for Background Study
        Collected all Functions under Analyzer related with Background Study
            And wrote a new class

================================================================================
v2_06

General Updates:
    No Updates to CCProtonPi0 Package 
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Revised Constructors for all Classes
        Old Style = Empty Constructor + initialize()
        New Style = Overloaded Constructor
        Analyzer Uses Member Initialization List to Init other Objects
        Collected other initialization functions under initFunctions.cpp
        
    Added Class PIDTool to the CVS (forgot to add on previous release)
    
    Created a New Class: CutList
        Moved all Cut Number related functions under this Class
        Removed Channel Tag from the Package
            Only Cut Tables had that tag and no needed for future
    New Class: CutList
        Member Variables are the Cut Numbers which represent each Selection 
            in the Analysis
        Creates the Cut Table for all topologies in the Analysis
================================================================================
v2_05

General Updates:
    For each event saving the truth_eventID and reco_eventID
    truth_eventID corresponds to the eventID in the DST File
        used in Arachne Scan

Michel Study:
    Saving true information for michelElectron, michelMuon and michelPion

        
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Modified for Michel Study
        New Histograms and Variables for Michel Study
        
    Removed ArachneScan Functionality
        Integrated this Functionality to the main class: Analyzer
    
    Improved Table Output Format
        They are ready to be imported into Excel
================================================================================
v2_04

General Updates:
    New Variable to Control flow of DataAnalysis
        AnalyzeEvent is marked inside tagTruth()
    Added new parameters for MICHEL Tool
        Truth and Reco distance to vertex 
    
Vertex Reconstruction Updates:

Muon Reconstruction Updates:
    
Proton Reconstruction Updates:
    
Pi0 Reconstruction Updates:

        
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Main pID Tool is the Proton Score LLR - Phil's new Tool
    Removed other pID Selections
    Removed Object Files from Analyzer Class
        It was a mistake to commit them on CVS
    New Functionality
        ArachneScan:
            Creates Roundup List which can be used with Arachne to scan events
================================================================================
v2_03

No Updates to CCProtonPi0 Package

--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Changed Class Name CCProtonPi0 to Analyzer
        CCProtonPi0 is the Package name which creates confusions
    New Class PIDTool
        Class designed for PID Optimization
================================================================================
v2_02

General Updates:
    Pi0 Reconstruction Methods and Other Classes are Updated to latest version 
        of Trung's CCPi0 Package
    Helper Classes for Pi0 Reconstruction collected under 
        the folder "src/Pi0Reco"
    Removed many NTuple Parameters
    EMPID Tool Included
        Options File Includes Initialization Parameters
    Removed Parameters for Unused and Used Energy
        preMuon, prePion, preProton
    Removed getClusterTime()
        Could not find any use of it
    PreFilterPi0() Modified
        Removed all unused parameters
        
Vertex Reconstruction Updates:
    Combine No Vertex and NULL Vertex CUT
    
Muon Reconstruction Updates:
    
Proton Reconstruction Updates:
    
Pi0 Reconstruction Updates:
    Photon Conversion Length Variable:
        Distance between gamma vertex and event vertex
            gamma1_dist_vtx
            gamma2_dist_vtx
        

--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Modified for v2_02 Output
    Removed Unused Functions and Variables
    Removed Old Playlists
================================================================================
v2_01

General Updates:
    Removed Debugging Messages for Function Returns
    Write FS Particle Table and Event Record for Reconstructed Particles
    Do NOT Analyze Event - if TRUE Vertex is NOT inside Fidicual Volume
    Do NOT Analyze the Event - if Event has a Bad Object
    Reconstruction Order Changed, new Order:
        Vertex, Muon, Michel Check, Pi0, Proton
    
TagTruth()
    tagSignal() 
        Bug Fix: was using Proton PDG for tagging Neutrons - fixed!
        
    tagBackground()
        Background Types: QE_Like, Single_PiPlus, Single_PiMinus,

        
Vertex Reconstruction Updates:
    
Muon Reconstruction Updates:
    
Proton Reconstruction Updates:
    Included Phil's New PID Tool
        m_LikelihoodPIDTool = tool<IParticleTool>( LikelihoodPIDTool );

Pi0 Reconstruction Updates:

--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    CutStatistics Updated - No Longer using Gold and Silver1 Signal
    Background Study Improved
    Removed Old Fail Checks:
        AntiMuon Contamination - Now checking via Background Branch
        nProngs - Each case will be analysed differently
    Cut Table now includes the smaller table in addition to complete table
        Used on presentations
    1 Prong and 2 Prong Event Analysis Separated
        Different Cut_Table
        Different Background_Table
        Different ROOT Files -- Still working on it
================================================================================
v2_00

General Updates:
    Included NTupleAnalysis Package under NTupleAnalysis/

================================================================================
v1_08

General Updates:
    PDG Namespace Introduced - PDG::proton for proton PDG Code
    Saving Unused and Used Cluster energy in different stages:
        preMuon
        preProton
        prePi0
        postPi0
    Time Distribution for  Clusters

TagTruth()
    tagSignal() Function Revised
        No Longer Requiring Truth Vertex inside Fiducial Volume
        No Longer using Gold and Silver1 Signal Categories
    tagBackground() Function
        Identifies Background Type as one of the following
            QE, SinglePiPlus, SinglePiMinus, MultiPion, Other
        Checks for Background Branching for each Type:
            Background with Michel
            Background with Pi0


Vertex Reconstruction Updates:

Muon Reconstruction Updates:

Proton Reconstruction Updates:
    Leading Proton Information saved after Proton Energy Correction
    If there is no proton candidate, NTuples have proton at rest Information
        No Proton or Pion Score - Just px,py,pz,E

Pi0 Reconstruction Updates:
================================================================================
v1_07 - 2014_12_05

General Updates:
    truthIsPlausible() Updated
        using muonIsPlausible()
    Removed "reco_*" variables (unused variables)
    Event Kinematics Calculations are Implemented
    Event Kinematics Need Update: See @todo in function header

New Functions:
    findLeadingProton()
    setLeadingProton_4P()


tagTruth() Updated
    Using GENIE:Event Record
        Creating Tables for Final State Particles
        Saving Information for Pi0, Pi0 Mother and Pi0 GrandMother
    setSignalKinematics() Updated
        Using FS Particle Trajectories
        Saving only 4-Momentum and Theta wrt Beam
        Removed all others

Vertex Reconstruction Updates:
    smear true vertex no longer used

Muon Reconstruction Updates:
    Muon MINOS Match Information now saved under "CCProtonPi0_muon_" variables
        muon_hasMinosMatchTrack
        muon_hasMinosMatchStub

Proton Reconstruction Updates:
    Proton reconstruction is controlled with a new parameter: 
        m_reconstruct_NoProtonEvents
    When it is TRUE, Reconstruction Continues even there is no proton candidate

================================================================================
v1_06 - 2014_11_07
Modularity Improved

New Analysis Parameter nProngs
    min_nProngs = 2
    max_nProngs = 2,3, etc... (Can be varied)

Options File Modified for the nProngs Parameters

Signal Definition is Changed!
    Signal_Gold
        Long Proton (KE > 120 MeV)
        1 Pi0 or 2x Gamma
        No Other
    Signal_Silver1
        Short Proton (KE < 120 MeV)
        1 Pi0 or 2x Gamma
        No Other

Documentation Removed: ProcessAna_Scripts.txt
================================================================================
v1_05 - 2014_08_06
Options file Ana_CCProtonPi0.opts Improved
	More Control for CCProtonPi0 Flow

Debugging Messages from older versions removed
New NTuple Data Added to track all of the CUTs
New Function: setVertexData()

Class: AngleScan
	Styling Modified to match Package Styling
	Comments Added
	
Class: ClusterVectorInfo
	Styling Modified to match Package Styling
	Comments Added
	
Prong Colors Added for Scanning Sessions
    http://ozgur.fresoft.com/ccprotonpi0.html
	
New Documentation: ProcessAna_Scripts.txt
================================================================================
v1_04 - 2014_07_15
Revised Pi0 Reconstruction
	Global Variables Used in all functions
	Removed unused functions and variables
	ConeBlobs()
		Variable Naming Match
		Return type changed: StatusCode to bool
			Returns false if setPi0ParticleData() fails
		ConeBlobs() main function that controls Pi0 Reconstruction. 
			If it fails, the  reconstructEvent() for that event stops.
	VtxBlob()
		Return type changed: StatusCode to bool
			Always returns true (return type reserved for future implementation)
	processBlobs()
		Removed unused variables
		Return type changed: StatusCode to void
		
Options File Modifications
	New Options files for DEBUG
	Original options file set to INFO
================================================================================
v1_03 - 2014_07_11
correctProtonProngEnergy() 
	Fixed a bug causing P4(Proton) = (nan,nan,nan,nan)
	returns bool if Energy Correction Fails	
		
setProtonParticleData()
	double vertexZ no longer input parameter
		Using Global Variable m_PrimaryVertex

================================================================================
v1_02 - 2014_07_09

TG4Trajectory Map Removed
Muon Reconstruction
	Using Global Variables
		m_MuonTrack
		m_MuonProng
		m_MuonParticle
	SetMuonParticleData() Improved
	
Proton Reconstruction
	Fixed a bug causing empty NTuple Branches even with a successful proton reconstruction
	Using Global Variables
		m_ProtonProngs
		m_ProtonParticles
	Stop Algorithm if CreateTrackedParticles() fails
		New Variable Cut_Particle_None
	Removed Proton Score Cut
	getProtonProng() Improved
	SetProtonParticleData() Improved
	Branches initialized to SENTINEL = -9.9
	
Global Variable: m_PrimaryVertex
	Still need to pass the variable to CCPi0 Functions - Some of the functions outside the Global Scope
	
Found a new bug in correctProtonProngEnergy() 
	If the function changes proton energy, NTuple Branches for Momentum and Energy does not filled correctly
	Will fix this with v1_3

================================================================================
v1_01 - 2014_07_03

* PreFilterPi0()
    * Getting Vertex as input
    * Return Value Changed: StatusCode -> bool
    * Debug Messages and Comments 
    * New Variables:
        * Rejected Energy
        * Status

* tagTruth()
    * Final State Particle Table as INFO
        * m_writeFSParticle_Table controls execution
        * Using reverse_iterator    
        
* setParticleData Functions
    * Return Value Changed: StatusCode -> bool
================================================================================
v1_00 - 2014_07_02

* setPi0ParticleData() Function reorganized completely
    * Function Order: 
        1) Calculations
        2) Branch Filling
    * Additional Comments Added
    
* Unused Variables Removed and Variable Naming Style Improved

* Version Tracking Started
    * CCProtonPi0 v1_00 is the stable version capable of reconstructing
        All Final State Particles
    
================================================================================


