===============================================================================
v2_61
CCProtonPi0 Updates:
	Fiducial Volume Slightly Changed
		For more accurate N(Nucleon) for Cross Section Calculation

-------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	Cross Section
		Added Muon Theta
		Added styling for final cross section plots
			Includes histogram scaling to match with Label

===============================================================================
v2_60
CCProtonPi0 Updates:
	Corrected Q2 Calculation
		Using 4 Momentum of the Beam 
	Signal Definition Changed
		Added Max Neutrino Energy 20 GeV

-------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	CrossSection Class Design Improved
		MC Processing is optional and it will create another file under
			$data/NTupleAnalysis/MC/Analyzed/
	
	Plotter Improved to Plot
		Cross Section Comparison Plots
		Cross Section Check Plots

===============================================================================
v2_59
CCProtonPi0 Updates:
	No Major Changes
-------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	Systematics in Data Corrected
		Filling Only CV after Loop
	
	Systematics in MC Corrected
		MuonTracking Systematic Corrected 
			Using Eroica, minerva1
		Flux Systematic Corrected
			Using Latest Flux
	
	CrossSection Plots Corrected
		No longer using POT Ratio for plotting POT Normalized 
		Calculation already includes POT

	Added Systematics to TruthAnalyzer
		Flux & GENIE Only
		Other Systematics are CV

	Plotter Improved for handling many plots  of CrossSection Calculations
		Improved folder structure for output plots

===============================================================================
v2_58
CCProtonPi0 Updates:
	No Major Changes
-------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	Flux Systematics Added
		Using Trung’s new_flux.h Class to calculate it
	GENIE Default Systematics Added
		
	Normalization Systematic Added
		MINOS Track Momentum

	Added new functions to Plotter for Error Handling
===============================================================================
v2_57
CCProtonPi0 Updates:
	No Major Changes
-------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	Cross Section Calculation Method Implemented
		Integrated Trung’s functions with CrossSection Class
		Directly copied calc_flux.h and its required libraries

	Added new Plotter Functions
===============================================================================
v2_56
CCProtonPi0 Updates:
	No Major Changes	
-------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	Data Correction Methods for Cross Section Calculation Implemented
		Background Subtraction
		Unfolding
		Efficiency Correction
	
	Tested Muon and Pi0 Momentum with Data Correction Methods

	New Plotting Functions for Cross Section Variables

===============================================================================
v2_55
CCProtonPi0 Updates:
	Added P and Theta for Signal FS particles Truth Variables

-------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	New Mode:
		Calculate Cross Section
			./main.exe calc
	New Class:
		CCProtonPi0_CrossSection
			Class responsible for Cross Section Calculation
			Initial commit for the Class
				No methods implemented yet!

	Folder structure improved
		Forming final folder structure inside Libraries/Folder_List.h
		Other Objects gets the final folder structure from Folder_List

	Added new histograms for the variables we will calculate the cross section
		Efficiency
		Response
===============================================================================
v2_54
CCProtonPi0 Updates:
	Corrected Neutrino Energy Calculation
		Extra Energy is collected in 3 different ways
			Dispersed Blob after Pi0 reconstruction
			Muon Extra Energy
			Rejected Cluster Energy
		Adding total extra energy 

	Corrected WSq Calculation
		I was using Q2 instead of q2 — (Q2 = -q2)
	
-------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	New script FindAllAnaFiles.sh
		Outputs a file listing ALL Ana_Tuple Files

===============================================================================
v2_53
CCProtonPi0 Updates:
	Structure Changed
		Moved #include statements to header file
			It should be designed like that in the beginning
		Functions for Truth Event moved to another implementation file
			CCProtonPi0_Truth.cpp
		Created Local PDG.h inside Helper
			Framework version was causing compile problems
			More control on the PDG numbers are also useful
	
	Background Type Improved
		Now including Charge Exchanged Pions also

	
-------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	General Improvements
		Removed old study fragments
			variables, histograms, text files, etc…

	BackgroundTool Improved 
		Included Charge Exchanged Pions
		Removed Michel column from output able

	TruthAnalysis Improved
		Performance Improved greatly by disabling the unused branches
		Calculating True Number of Signal Events using this Class
		Added new background branches
		Added Signal Pi0 Histograms for efficiency curves

	CutList Improved
		Removed old Cuts

===============================================================================
v2_52
CCProtonPi0 Updates:
	Shower Recovery Methods
		1Shower Recovery Methods
			See AngleScan Improvements for implementation details
			Use Smaller Cone Angle
			Use Different Search View
		3 Shower Recovery Methods
			Use Direction Cut 
				If 2 shower have GOOD direction, keep event

	AngleScan Improved
		New Mode:
			AllowSmallConeAngle
			If it is TRUE, bin size will be 2 degrees (default is 4 degrees)
		New Modes 
			AngleScan_U: Start search from U view
			AngleScan_V: Start search from V view
			Duplicated from original class
				I may integrate SearchView into original class, but for now they will stay different
				I do not have time to work on that for now
			Do not include Small Angle Mode
		Removed MaxDigit Energy Cleaning
			It is not effective, no need to do use it
		Removed zDistanceFromLessThan
			It is not used
				
-------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	No Major Changes
	Study for Shower Recovery Methods

===============================================================================
v2_51
CCProtonPi0 Updates:
	Improved ConeBlobs Function
		More modular structure, collected common task items under functions such as
			FillUsableClusters()
			ProcessRejectedClusters()
			RecoverShowers_InvMass()
			etc..
		
		Removed old and unnecessary NTuple Variables
		
		Improved Cluster Rejection Method
			Collecting all rejected clusters in a single blob, 
				Previously out time and low charge was different
			Rejecting following clusters:
				Out Time with Muon (OLD)
				Low Charge Cluster (OLD)
				Cluster inside HCAL (NEW)
		
		Improved Recover Methods
			Recover 1Shower Events
				Not recovering anything yet, saving 1Shower Information only
			Recover 3Shower Events
				Check position and direction of each shower, 
					if one fails reject it and keep the other two
				
-------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	No Major Changes

===============================================================================
v2_50
CCProtonPi0 Updates:
	Background Type Improved
		NC
		CC-Anti Neutrino
		QE Like 
			No Pion, No other particles than Nucleons and muon
		Single Charged Pion
		Double Pions with Pi0
		Double Pions without Pi0
		Multiple Pions with Pi0
		Multiple Pions withotu Pi0
		Other
	
	Keeping Events with Michel Electron is Optional
		Decided not to remove these events in reconstruction stage

	Removed HoughEnergyLimit inside ConeBlobs
		PreFilterPi0 already checks max energy no need to check again
		
--------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	BackgroundTool Updated for the new Background Types
	Plotter Improved
===============================================================================
v2_49
CCProtonPi0 Updates:
	No Major Changes

--------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	New Package: TruthAnalysis
		Class: TruthAnalyzer
			Loops over Truth Branch of CCProtonPi0 NTuples
				Get Truth Branch variables using makeClass/Truth
			Outputs Signal & Background information

	Plotter Improved
		MC Only Background Plots added
===============================================================================
v2_48
CCProtonPi0 Updates:
 	Modified reconstructEvent() to save NTuple Variables during reconstruction
		Vertex Variables right after Vertex Reconstruction
		Muon Variables right after Muon Reconstruction
		Proton Variables right after Proton Reconstruction
		Pi0 Variables right after Pi0 Reconstruction
	This way we have the information of the particle even if the event rejected by a future stage
	
	New functions to test proton and pi0 reconstructions
		In some cases proton and pi0 momentums are -nan
		Reject these cases

--------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	Improved Method for adding CutArrows on Plots 
		Automatically find arrow height
===============================================================================
v2_47
CCProtonPi0 Updates:
	No Major Changes
	
--------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	CutList Class Improved
		Cut Table is created for all events
			Overall Efficiency and Purity is important
		Keeping 1Track and 2Track Cut Tables for internal studies
===============================================================================
v2_46
CCProtonPi0 Updates:
	No Changes
	
--------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	Added MC weights to ALL Histograms
	Fixed Compiler Warning on CCProtonPi0_Plotter_Macros.cpp
===============================================================================
v2_45
CCProtonPi0 Updates:
	Latest version of Neutrino Energy Calculations
		Vertex Energy and Extra Energy study finalized
		Binding Energy Removed
			Vertex Energy Calibration includes binding energy
	
--------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	Neutrino Energy Study is Finalized
		New Functions & Histograms
	Plotter Class Improvements
		POT Normalization & Area Normalization Plots added

===============================================================================
v2_44
CCProtonPi0 Updates:
	Removed ALL Neutrino Energy Study Functions

	Revised Vertex Energy Calculation
		New calculation based on CCProtonPi0 MC study
		Line Equation to estimate Protonic Energy for a given Visible Energy around vertex
	
	Improved Nuclear Binding Energy
		Using Nuclear Binding Energy per Nucleon for Carbon
		Using expected Number of Nucleons for 1 Track and 2 Track
	
--------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	FindPlaylistFiles.sh
		Fixed Ana Directory location for data events

	Removed ALL Neutrino Energy Histograms and Functions

	Reorganized Plotter Class
		Different Functions for DatavsMC & MCOnly Plots
===============================================================================
v2_43
CCProtonPi0 Updates:
	Study: Neutrino Energy
		Built in functions and NTuple Variables
		Will separate implementation file and optional NTuple Variables in future releases
	VertexBlob() Function Revised
		Now it creates ONLY VertexBlob with radius 90mm
		Saves VertexBlob Visible Energy and Protonic Energy
	SaveExtraEnergy()
		After all particle reconstructions, this function collects all Unused Cluster Energy 
			in different volumes
		Radii for search: 50, 100, 150, 200, 300, 500 [mm]
	GetShortProtonCalConstant()
		Uses a line fit to get a calibration constant for given visible energy
			Not finalized, may change
		
--------------------------------------------------------------------------------
NTupleAnalysis Updates:	
	Particle Cannon
		Single Proton study to get Protonic Energy Constant 
	Study: Neutrino Energy
		Specific functions and histograms
		Will be removed in future releases
	Revised Interaction Class
		Histograms modified to study Event Kinematics 
===============================================================================
v2_42a
CCProtonPi0 Updates:
	Added Studies/CCProtonPi0_Study_ShowerEnergy.cpp File to repository

===============================================================================
v2_42
CCProtonPi0 Updates:
	Study Concept
		A Study can be activated using the options file (Ana_CCProtonPi0.opts)
		NTuple variables will be activated only if the study is active
			Decreases Output File size if the study is not active
		Functions for a specific study is collected under another implementation file
			Decreases compile time for the CCProtonPi0.cpp

	Current Studies Included in the Package
		Pi0 Shower Energy Study: Latest study I have been working on
			Ana_CCProtonPi0.opts Variable: 
				ToolSvc.CCProtonPi0.StudyShowerEnergy
			Implementation File: 
				Studies/CCProtonPi0_Study_ShowerEnergy.cpp
			
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Removed several Histograms and Functions related with Shower Energy Study
		I can always find them on CVS (v2_41), they are no longer needed
	Reorganized Pion and Pi0Blob Classes
		Moved all blob related histograms from Pion to Pi0Blob 
			I should have done this before!!
	New Script FindPlaylistFiles.sh
		Output a list of files for playlists.
		These files are used to merge separate files to a single one

===============================================================================
v2_41
CCProtonPi0 Updates:
	Final versions of 
		Pi0 Shower Energy Study
		SideECAL Hit Study
 
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Final versions of 
		Pi0 Shower Energy Study
		SideECAL Hit Study

================================================================================ 
v2_40
CCProtonPi0 Updates:
	m_store_all_events is FALSE by default --  (FALSE in options file also)	
	Gamma Energy is calculated with New Method
		Saving Gamma Energy for each sub detector
		Saving Gamma Visible Energy for each sub detectors
	Study for EM Shower Energy Improved
		Checking many more parameters
		These parameters will be removed
 
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Area Normalized Plots for Data vs MC
	New Histograms and Functions for EM Shower Energy Study
		These are temporary

================================================================================
v2_39
CCProtonPi0 Updates:
	Pi0 Shower Energy Study
		In addition to old energy calculation implemented 2 new ones
		Method 1:
			new kT: from fit
			new kE: from fit
			same kS andkH
		Method 2:
			new kT: from fit
			new kE: from fit
			new kS: 
				Sort Clusters in Increasing Z position
				After the first SideECAL Hit, assume all other Tracker hits are in Side ECAL
				Use actual kE to calculate Calorimetric Energy
			same kH
			
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Pi0 Shower Energy Study
		New Functions & Histograms for the study
		Will remove these functions & histograms after the study
	New script to submit <<All LE Data>> at once
================================================================================
v2_38
CCProtonPi0 Updates:
	HTBlob updated for Calorimetric Energy
		New Constants and Method to calculate Calorimetric Energy from Visible Energy
		getBlobEnergyTime()
			function return type changed to void 
				function never returns FAILURE, no need for returning StatusCode
			Make two different functions for OLD and NEW method
				NEW Method will be revised -- It is not finalized
	
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Removed EM Shower Energy Study Histograms and Functions
	Removed unused playlists from Input/Playlist Folder
	Revised getPOT() Function
	Reduce mode no longer overwrites the ReducedNTuple.root and CutHistograms.root
		Protection against trying to reduce by mistake
		Now user needs to keep track of ROOT file names
================================================================================
v2_37
CCProtonPi0 Updates:
	No Major Changes
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	EM Shower Calorimetric Energy Study
================================================================================
v2_36
CCProtonPi0 Updates:
	No Major Changes
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Added new PlotUtils Class -- POTCounter
		Using this class to count POT of Data and MC
	Reorganized ParticleCannon Package
		Moved ParticleCannon Folder to the top folder of NTupleAnalysis
		Generate:
			Created a script for submitting Particle Cannon Jobs
		Analyze:
			Collected ParticleCannon Analysis code inside a folder
================================================================================
v2_35
CCProtonPi0 Updates:
	No Major Changes
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Added a new class for analyzing Particle Cannon DST Output
		Class located under makeClass Folder
			makeClass function is used for converting DST Output to a class header
		Standard Class Variables written for the package
			Will add more variables in time
		Input: Standard Minerva DST File
		Output: ROOT file with Histograms
			A new folder special to PS_DST Class is created under 
				/minerva/data/users/oaltinok/NTupleAnalysis
================================================================================
v2_34
CCProtonPi0 Updates:
	No Major Changes
		I will keep Analysis Variables used for EM Shower Energy Problem
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Removed Variables used for testing EM Shower Energy Problem
		No need in NTupleAnalysis - Variables still exist in Reconstruction Stage
	Keeping Variables for Truth Match 
	New Function: double ApplyEMEnergyCorrection(double var)
		Applies the correction factor to related variables
			Input: Variable
			Output: Corrected Variable
================================================================================
v2_33
CCProtonPi0 Updates:
	Removed SaveBlobStripInfo()
		No Longer Needed
		In Some cases it causes a crash with Segmentation Fault 
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	No Major Changes
================================================================================
v2_32
CCProtonPi0 Updates:
	Bug Fix for AngleScan Improvement on v2_31
		Problem: 
			In some cases removing digits may cause empty clusters
			Empty clusters may cause empty Blobs
			Empty Blobs creates Segmentation Fault
		Solution:
			Remove Empty Blobs before returning finalBlobs
	Removed SaveBlobMCHitEnergy() 
		No Longer Needed
	Tested with MC and Data -- Ready for Large Job Submission
		Will Process Complete LE in MC and Data
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	No Major Changes
================================================================================
v2_31
CCProtonPi0 Updates:
	Saving Digit Energy for each Pi0Blob
	Improved AngleScan Class
		Clean Showers using Maximum Digit Energy Cut
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	No Major Updates
================================================================================
v2_30
CCProtonPi0 Updates:
	Removed Many Debugging Messages
		Package is stable no longer needed
	Saving Hit Energy by PDG
		All, pi0, proton
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	No Major Changes
================================================================================
v2_29
CCProtonPi0 Updates:
	truthIsPlausible() implemented correctly
		Moved muonIsPlausible() check from reconstructEvent() to truthIsPlausible()
	SaveBlobDigitInfo()
		Planning to use detecting showers very close to Edge of the Detector
		Saving strip information for each digit inside a found Pi0Blob
			all strips, max strip, min strip
		Saving Z position for each cluster inside a found Pi0Blob
			all Zs, max Z, minZ
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Many New Histograms and Plotting Functions for studying EM Shower Energy
================================================================================
v2_28
CCProtonPi0 Updates:
	EM Energy Calibration Constants Updated with Jaewon Park;s Technote (DocDB: 9407)
		Scale Factor
			OLD: 1.213 --- NEW: 1.326
		kECAL
			OLD: 2.274 --- NEW: 2.341
		kHCAL
			OLD: 10.55 --- NEW:9.54
	EM Energy Calculation is same, only constants are updated
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Collected ROOT Default Classes for CCProtonPi0_Analyzer Class under
		CCProtonPi0_Analyzer_Default.cpp file
================================================================================
v2_27
CCProtonPi0 Updates:
	Improved tagTruth()
		SetSignalKinematics Improved for Pi0 Daughter Gamma's
	Improved Truth Match for found Pi0Blobs
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Resurrected Pi0Blob Class
		Using for Pi0Blob Truth Match Histograms
	Updated Job Submission Scripts
		Removed submitDataJobs scripts
			I always submit Data Jobs as a playlist
		Updated submitJobs.sh scripts
	Output is /pnfs/
================================================================================
v2_26
CCProtonPi0 Updates:
	Truth Match Added for Found Blobs during Pi0 Reconstruction
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Explanatory Histograms
	No Major Change
================================================================================
v2_25
CCProtonPi0 Updates:
	Package Updated using Trung's CCPi0 HEAD Version
	Added Truth Match Classes from Trung's CCPi0 Package
	Removed m_PrimaryVertex 
		It was a bad idea to use that
	Truth Match Improvements:
		SaveTruthUnusedClusterEnergy() functions for different Clusters
			Inside Tracker,ECAL, HCAL
			Near Vertex
			OutTime, LowCharge
			Dispersed
	Event Reconstruction Improvements:
		nProngs No Longer Used
			nTracks = Number of Tracks attached to Interaction Vertex 
		GetMuonExtraEnergy()
		DiscardFarTracks()
			Discards Tracks if they are away from vertex more than 50mm
				or
			First Track of a Secondary Vertex -- Unclear Reason will check soon
			Update  nTracks parameter as:
				nTracks_Close
				nTracks_Far
			Discarded Tracks can be used in Pi0 Reconstruction Algorithm
		TwoParLineFitBlobVtxDistance()
		DispersedBlob()
			Get Calorimetric Unused Cluster Energy after Pi0 Reconstruction
		
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	No Major Change
================================================================================
v2_24
CCProtonPi0 Updates:
	No Major Change
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	CutList Class is refactored for new analysis modes(1Track, 2Track)
		Cut Statistics are calculated for different topologies right after MINOS Match Cut
			and written in different Text Files
		Cut Histograms are unique to Topology
	main.cpp is improved
		Now processing type (mc or data) is input argument
================================================================================
v2_23
CCProtonPi0 Updates:
	No Major Change
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Analysis Completely Separated in 3 Topologies
		Similar to All, Signal, Background but now it is for topologies
		1 Track Events Analyzed and Saved under 1Track Folder
		2+ Tracks Events Analyzed and Saved under 2Track Folder
		All Events Analyzed and Saved under All Folder
	Main.cpp  is designed to analyze or plot all Topologies every time
================================================================================
v2_22
CCProtonPi0 Updates:
	No Major Change
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Refactored Package Design
		Removed Different folders for All, Signal, Background Events
		Creating and Filling Histograms for different event types
			Single ROOT File to keep all histograms
	Disabled Unused Objects: 
		Pi0BlobTool, pIDTool, MichelTool
		They are unusable after latest updates
		I will revive them if needed
	Plotter Improved
		Added DrawDataMCStacked
			Using this function to Compare Data vs MC (Signal, Background)
		Removed all unused functions
		Added New Object CutArrow 
		Following Error is Solved
			Error in <TBufferFile::CheckByteCount>: object of class TObject read too few bytes: 
			Solution: < f->Close() > after writing Histograms
================================================================================
v2_21 
Playlist minerva1 for Data and MC
CCProtonPi0 Updates:
        No Major Change
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
        Photon Histograms added under Pion Object
        BackgroundTool completely redesigned
                Data Structures and Function Designs are improved
                        Now it is easier to add/remove new Backgrounds
                Text Output is modified to be Excel Ready
        CutList Histograms Improved
                Now saving different Histograms for different Event Types 
                        Signal vs Background
                See <Ozgurs Scratch Page> on Wiki for more information
================================================================================
v2_20
CCProtonPi0 Updates:
	Updating the HEAD Version of the package
		Will continue working with Minerva Release v10r8p6
	Changed <Do NOT Reconstruct NC Events>
		Added NC Interactions as Background
		Thanks Trung for warning me!
	Pi0BlobTool Updates
		Not complete!
		
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	No Change
================================================================================
v2_19
CCProtonPi0 Updates:
	Signal Definition Changed
		Signal Definition explicitly checks for Fiducial Volume
			Actually True Vertex Fiducial Volume is required for ALL Events,
			This addition just for a better Signal Definition
	Background Study Improved: Two Different Background Sets
		Background Type
			AntiNeutrino, QELike, SinglePion, DoublePion, MultiPion
		Background with Pi0
			NoPi0, SinglePi0, MultiPi0
	Do NOT Reconstruct MC Event
		If TRUE vertex is NOT Fiducial
		If TRUE Interaction is NOT ChargedCurrent 
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	makeClass Folder Structure Improved for different TBranches
		CCProtonPi0 , Truth, Other
		Truth Branch is used to Analyze All Truth Events
			Get Total Number of Signal Events    
================================================================================
v2_18
CCProtonPi0 Updates:
	Changed Global Variables to mutable Member Variables
	Removed Unused/Old Classes
	Signal Definition Changed
		No Longer Requiring 2x Gamma Out of Nucleus
		Current Definition:
			CC Neutrino Interaction
			Single Pi0 out of nucleus
			No Mesons out of nucleus
	VertexBlob() Modified
		FilamentVertex Calculation removed -- Trung's suggestion
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Interaction Class Modified to use MnvH1D 
	Plotter Class Improved
		Implementation for Plotting Macros in another file
	CCProtonPi0_Plotter_Macros.cpp
================================================================================
v2_17
CCProtonPi0 Updates:
	No Major Changes
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Integrated <PlotUtils> and <UnfoldUtils> to the package
	Refactored Particle Classes
		Improved performance by removing all calculations
		Minerva style histograms
	Refactored Plotter to use <MnvPlotter>
	Reorganized Input/Output Mechanism
================================================================================
v2_16
CCProtonPi0 Updates:
	Refactored reconstructEvent() Function
		Removed Unused Cuts
		Improved Modular Design
	Reorganized Tools and Services
		Removed Unused Tools
		Initialize all tools under one try-catch 
	Saving Leading Proton Kinematics in addition to all_protons
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	No Major Changes
================================================================================
v2_15
CCProtonPi0 Updates:
	No Major  Changes
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Output Folder for ROOT files is now under /minerva/data
	New Mode: Reduce NTuples 
		Create a single ROOT file only with the events passing event selections
		Mode implemented as a Public Function for Analyzer Class
			All Classes initialized differently if the Mode is Reduce
				Other classes do not need to create their output files
		During Reduce, Filling Cut Statistics and Cut Histograms
	Analyze Mode Modified to use the Reduced NTuples

================================================================================
v2_14b 

Commit before major NTupleAnalysis Update
	No Major Updates

================================================================================
v2_14a 

Commit after fixing compilation Errors
	No Major Updates
	Removed: static const double SENTINEL from header file
===============================================================================
v2_14 

Commit after fixing compilation Errors
	No Major Updates
===============================================================================
v2_13 

CCProtonPi0 Updates:
	General:
		Ran successfully with Eroica
		Refactored Event Kinematics
			Modular Design
			Neutrino Energy 
				1 Track Events uses Equation from DocDB: 9749-v2
				2 Track Events uses Final State Particles
				Muon Energy + Hadron Visible Energy
			Q2 and W2
				Calculated for two different Neutrino Energy
	Proton Reconstruction:
		Something wrong with it. 
			dEdXTool returns wrong 4-Momentum
			Committing to compare changes
		
	Pi0 Reconstruction:

-------------------------------------------------------------------------------
NTupleAnalysis Updates:

===============================================================================
v2_12 - Version for Rochester Meeting June 2015

CCProtonPi0 Updates:
	General:
		Removed nProngs Cut
	Proton Reconstruction:
		Proton Reconstruction runs only if nPrimaryProngs > 1
	Pi0 Reconstruction:
		Modified AreBlobsGood() Function
			Required for Good Blob Momentums
		Changed VtxBlob() to be void function
			It was returning TRUE always 
		

--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	Analysis Cuts are changed 
		No Longer using nProngs Cut and Separating Two Topologies after 
			Pi0 inv Mass Cut
	CutList Improved for New Analysis Cuts
	Script for Data Job Submission Added

================================================================================
v2_11

CCProtonPi0 Updates:
	Removed EMPID Tool
	Modified for MichelTool Cleaning Cut Implementation
	Reorganized NTuple Variables
	
	Refactored Pi0 Reconstruction
		Improved Function Design
		Using Global Variables to store Gamma1 and Gamma2
			Will Change Global Variable Design in later versions
		
	Pi0BlobTool
		New Class for checking quality of found Blobs
		Initial Commit of the Class - Not using in this version

--------------------------------------------------------------------------------
NTupleAnalysis Updates:
	New Class: Pi0Blob
		Class for studying Pi0Blob Properties
================================================================================
v2_10

CCProtonPi0 Updates:
    TagTruth():
        SetSignalKinematics() Improved, 
            Pi0 Daughters: Gamma1 and Gamma 2 are saved also
            True Particle Kinematics are saved in format: P4 = (px, py, pz, E)
            Removed old format 
    Proton Reconstruction:
        Calculate Proton Track Length using end & start points
    
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Fixed Class Name Conflict with the Framework:
        Some Classes in NTupleAnalysis Package have same name 
            with a Class in Framework
        All Class Names are Changed as following:
            Class -----> CCProtonPi0_Class

================================================================================
v2_09

CCProtonPi0 Updates:
    Improved Job Submission Script Located: /CCProtonPi0/NTupleAnalysis/Input/
        Job Submission  for Odd and Even Run Numbers 
        
    Implemented selection mechanism for Found Michel Prongs
        Save Events with Short time difference AND High michel prong energy
        
    Updated PreFilter() Function Parameters
        Unused Energy in Tracker + ECAL + HCAL = [80,2000] --- > [50,2000]

--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Added Log File Functionality
        Instead of cout, using Log File for debugging purposes
    Fixed Timing of the Package
        Was using clock(), replaced it with time()
    New Class: MichelTool - For Michel Studies
        Collected all Histograms and Counters under MichelTool Class
        Analyzer fills MichelTool Histograms
================================================================================
v2_08

CCProtonPi0 Updates:
    Michel Tool
        New Parameters for Detected Michel Prongs
    Removed readme file from doc/
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Wextra Added to the MakeFile
        Fixed all warnings due to Wextra
    New Class: Interaction
        Removed Interaction specific variables and functions from Analyzer 
            and created Interaction Class
    Major Revision of Analyzer Class
        Combined All implementations files under single file Analyzer.cpp
        Removed Unused functions and variables
    Revised Plotter Class
        Modified Function Calls
        Removed Unused parameters
================================================================================
v2_07

General Updates:
    No Updates on CCProtonPi0 Package
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Improved Notifications during Initialization

    Added Base Class for the Package: NTupleAnalysis
        NTupleAnalysis Class Includes Member Variables common for 
            all other classes
    
    Removed all Default Constructors 
        Previously,  Default ctor was giving an error on runtime, 
            now it will give an error during compile
        Object Initiation only possible via overloaded constructors
        Compiler will give an Error, if the Object is initiated with 
            Default Constructors
        
    New Class: BackgroundTool
        Responsible for Background Study
        Collected all Functions under Analyzer related with Background Study
            And wrote a new class

================================================================================
v2_06

General Updates:
    No Updates to CCProtonPi0 Package 
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Revised Constructors for all Classes
        Old Style = Empty Constructor + initialize()
        New Style = Overloaded Constructor
        Analyzer Uses Member Initialization List to Init other Objects
        Collected other initialization functions under initFunctions.cpp
        
    Added Class PIDTool to the CVS (forgot to add on previous release)
    
    Created a New Class: CutList
        Moved all Cut Number related functions under this Class
        Removed Channel Tag from the Package
            Only Cut Tables had that tag and no needed for future
    New Class: CutList
        Member Variables are the Cut Numbers which represent each Selection 
            in the Analysis
        Creates the Cut Table for all topologies in the Analysis
================================================================================
v2_05

General Updates:
    For each event saving the truth_eventID and reco_eventID
    truth_eventID corresponds to the eventID in the DST File
        used in Arachne Scan

Michel Study:
    Saving true information for michelElectron, michelMuon and michelPion

        
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Modified for Michel Study
        New Histograms and Variables for Michel Study
        
    Removed ArachneScan Functionality
        Integrated this Functionality to the main class: Analyzer
    
    Improved Table Output Format
        They are ready to be imported into Excel
================================================================================
v2_04

General Updates:
    New Variable to Control flow of DataAnalysis
        AnalyzeEvent is marked inside tagTruth()
    Added new parameters for MICHEL Tool
        Truth and Reco distance to vertex 
    
Vertex Reconstruction Updates:

Muon Reconstruction Updates:
    
Proton Reconstruction Updates:
    
Pi0 Reconstruction Updates:

        
--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Main pID Tool is the Proton Score LLR - Phil's new Tool
    Removed other pID Selections
    Removed Object Files from Analyzer Class
        It was a mistake to commit them on CVS
    New Functionality
        ArachneScan:
            Creates Roundup List which can be used with Arachne to scan events
================================================================================
v2_03

No Updates to CCProtonPi0 Package

--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Changed Class Name CCProtonPi0 to Analyzer
        CCProtonPi0 is the Package name which creates confusions
    New Class PIDTool
        Class designed for PID Optimization
================================================================================
v2_02

General Updates:
    Pi0 Reconstruction Methods and Other Classes are Updated to latest version 
        of Trung's CCPi0 Package
    Helper Classes for Pi0 Reconstruction collected under 
        the folder "src/Pi0Reco"
    Removed many NTuple Parameters
    EMPID Tool Included
        Options File Includes Initialization Parameters
    Removed Parameters for Unused and Used Energy
        preMuon, prePion, preProton
    Removed getClusterTime()
        Could not find any use of it
    PreFilterPi0() Modified
        Removed all unused parameters
        
Vertex Reconstruction Updates:
    Combine No Vertex and NULL Vertex CUT
    
Muon Reconstruction Updates:
    
Proton Reconstruction Updates:
    
Pi0 Reconstruction Updates:
    Photon Conversion Length Variable:
        Distance between gamma vertex and event vertex
            gamma1_dist_vtx
            gamma2_dist_vtx
        

--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    Modified for v2_02 Output
    Removed Unused Functions and Variables
    Removed Old Playlists
================================================================================
v2_01

General Updates:
    Removed Debugging Messages for Function Returns
    Write FS Particle Table and Event Record for Reconstructed Particles
    Do NOT Analyze Event - if TRUE Vertex is NOT inside Fidicual Volume
    Do NOT Analyze the Event - if Event has a Bad Object
    Reconstruction Order Changed, new Order:
        Vertex, Muon, Michel Check, Pi0, Proton
    
TagTruth()
    tagSignal() 
        Bug Fix: was using Proton PDG for tagging Neutrons - fixed!
        
    tagBackground()
        Background Types: QE_Like, Single_PiPlus, Single_PiMinus,

        
Vertex Reconstruction Updates:
    
Muon Reconstruction Updates:
    
Proton Reconstruction Updates:
    Included Phil's New PID Tool
        m_LikelihoodPIDTool = tool<IParticleTool>( LikelihoodPIDTool );

Pi0 Reconstruction Updates:

--------------------------------------------------------------------------------
NTupleAnalysis Updates:
    CutStatistics Updated - No Longer using Gold and Silver1 Signal
    Background Study Improved
    Removed Old Fail Checks:
        AntiMuon Contamination - Now checking via Background Branch
        nProngs - Each case will be analysed differently
    Cut Table now includes the smaller table in addition to complete table
        Used on presentations
    1 Prong and 2 Prong Event Analysis Separated
        Different Cut_Table
        Different Background_Table
        Different ROOT Files -- Still working on it
================================================================================
v2_00

General Updates:
    Included NTupleAnalysis Package under NTupleAnalysis/

================================================================================
v1_08

General Updates:
    PDG Namespace Introduced - PDG::proton for proton PDG Code
    Saving Unused and Used Cluster energy in different stages:
        preMuon
        preProton
        prePi0
        postPi0
    Time Distribution for  Clusters

TagTruth()
    tagSignal() Function Revised
        No Longer Requiring Truth Vertex inside Fiducial Volume
        No Longer using Gold and Silver1 Signal Categories
    tagBackground() Function
        Identifies Background Type as one of the following
            QE, SinglePiPlus, SinglePiMinus, MultiPion, Other
        Checks for Background Branching for each Type:
            Background with Michel
            Background with Pi0


Vertex Reconstruction Updates:

Muon Reconstruction Updates:

Proton Reconstruction Updates:
    Leading Proton Information saved after Proton Energy Correction
    If there is no proton candidate, NTuples have proton at rest Information
        No Proton or Pion Score - Just px,py,pz,E

Pi0 Reconstruction Updates:
================================================================================
v1_07 - 2014_12_05

General Updates:
    truthIsPlausible() Updated
        using muonIsPlausible()
    Removed "reco_*" variables (unused variables)
    Event Kinematics Calculations are Implemented
    Event Kinematics Need Update: See @todo in function header

New Functions:
    findLeadingProton()
    setLeadingProton_4P()


tagTruth() Updated
    Using GENIE:Event Record
        Creating Tables for Final State Particles
        Saving Information for Pi0, Pi0 Mother and Pi0 GrandMother
    setSignalKinematics() Updated
        Using FS Particle Trajectories
        Saving only 4-Momentum and Theta wrt Beam
        Removed all others

Vertex Reconstruction Updates:
    smear true vertex no longer used

Muon Reconstruction Updates:
    Muon MINOS Match Information now saved under "CCProtonPi0_muon_" variables
        muon_hasMinosMatchTrack
        muon_hasMinosMatchStub

Proton Reconstruction Updates:
    Proton reconstruction is controlled with a new parameter: 
        m_reconstruct_NoProtonEvents
    When it is TRUE, Reconstruction Continues even there is no proton candidate

================================================================================
v1_06 - 2014_11_07
Modularity Improved

New Analysis Parameter nProngs
    min_nProngs = 2
    max_nProngs = 2,3, etc... (Can be varied)

Options File Modified for the nProngs Parameters

Signal Definition is Changed!
    Signal_Gold
        Long Proton (KE > 120 MeV)
        1 Pi0 or 2x Gamma
        No Other
    Signal_Silver1
        Short Proton (KE < 120 MeV)
        1 Pi0 or 2x Gamma
        No Other

Documentation Removed: ProcessAna_Scripts.txt
================================================================================
v1_05 - 2014_08_06
Options file Ana_CCProtonPi0.opts Improved
	More Control for CCProtonPi0 Flow

Debugging Messages from older versions removed
New NTuple Data Added to track all of the CUTs
New Function: setVertexData()

Class: AngleScan
	Styling Modified to match Package Styling
	Comments Added
	
Class: ClusterVectorInfo
	Styling Modified to match Package Styling
	Comments Added
	
Prong Colors Added for Scanning Sessions
    http://ozgur.fresoft.com/ccprotonpi0.html
	
New Documentation: ProcessAna_Scripts.txt
================================================================================
v1_04 - 2014_07_15
Revised Pi0 Reconstruction
	Global Variables Used in all functions
	Removed unused functions and variables
	ConeBlobs()
		Variable Naming Match
		Return type changed: StatusCode to bool
			Returns false if setPi0ParticleData() fails
		ConeBlobs() main function that controls Pi0 Reconstruction. 
			If it fails, the  reconstructEvent() for that event stops.
	VtxBlob()
		Return type changed: StatusCode to bool
			Always returns true (return type reserved for future implementation)
	processBlobs()
		Removed unused variables
		Return type changed: StatusCode to void
		
Options File Modifications
	New Options files for DEBUG
	Original options file set to INFO
================================================================================
v1_03 - 2014_07_11
correctProtonProngEnergy() 
	Fixed a bug causing P4(Proton) = (nan,nan,nan,nan)
	returns bool if Energy Correction Fails	
		
setProtonParticleData()
	double vertexZ no longer input parameter
		Using Global Variable m_PrimaryVertex

================================================================================
v1_02 - 2014_07_09

TG4Trajectory Map Removed
Muon Reconstruction
	Using Global Variables
		m_MuonTrack
		m_MuonProng
		m_MuonParticle
	SetMuonParticleData() Improved
	
Proton Reconstruction
	Fixed a bug causing empty NTuple Branches even with a successful proton reconstruction
	Using Global Variables
		m_ProtonProngs
		m_ProtonParticles
	Stop Algorithm if CreateTrackedParticles() fails
		New Variable Cut_Particle_None
	Removed Proton Score Cut
	getProtonProng() Improved
	SetProtonParticleData() Improved
	Branches initialized to SENTINEL = -9.9
	
Global Variable: m_PrimaryVertex
	Still need to pass the variable to CCPi0 Functions - Some of the functions outside the Global Scope
	
Found a new bug in correctProtonProngEnergy() 
	If the function changes proton energy, NTuple Branches for Momentum and Energy does not filled correctly
	Will fix this with v1_3

================================================================================
v1_01 - 2014_07_03

* PreFilterPi0()
    * Getting Vertex as input
    * Return Value Changed: StatusCode -> bool
    * Debug Messages and Comments 
    * New Variables:
        * Rejected Energy
        * Status

* tagTruth()
    * Final State Particle Table as INFO
        * m_writeFSParticle_Table controls execution
        * Using reverse_iterator    
        
* setParticleData Functions
    * Return Value Changed: StatusCode -> bool
================================================================================
v1_00 - 2014_07_02

* setPi0ParticleData() Function reorganized completely
    * Function Order: 
        1) Calculations
        2) Branch Filling
    * Additional Comments Added
    
* Unused Variables Removed and Variable Naming Style Improved

* Version Tracking Started
    * CCProtonPi0 v1_00 is the stable version capable of reconstructing
        All Final State Particles
    
================================================================================


